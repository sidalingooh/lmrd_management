<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmrd.dao.user.BackUserMapper">
  <resultMap id="BaseResultMap" type="com.lmrd.entity.user.BackUser">
    <!--
    @mbg.generated
    -->
    <id column="back_user_id" jdbcType="BIGINT" property="backUserId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enable" jdbcType="INTEGER" property="enable" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="agent_id" jdbcType="BIGINT" property="agentId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbg.generated
    -->
    back_user_id, email, enable, mobile, password, real_name, user_type, user_name, agent_id, 
    create_time, update_time, delete_time, is_delete, version
  </sql>
  <select id="selectByExample" parameterType="com.lmrd.entity.user.BackUserExample" resultMap="BaseResultMap">
    <!--
    @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from back_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from back_user
    where back_user_id = #{backUserId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbg.generated
    -->
    delete from back_user
    where back_user_id = #{backUserId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lmrd.entity.user.BackUserExample">
    <!--
    @mbg.generated
    -->
    delete from back_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmrd.entity.user.BackUser" useGeneratedKeys="true" keyProperty="backUserId" keyColumn="backUserId">
    <!--
    @mbg.generated
    -->
    insert into back_user (back_user_id, email, enable, 
      mobile, password, real_name, 
      user_type, user_name, agent_id, 
      create_time, update_time, delete_time, 
      is_delete, version)
    values (#{backUserId,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, 
      #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{userType,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{agentId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{isDelete,jdbcType=INTEGER}, #{version,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lmrd.entity.user.BackUser" useGeneratedKeys="true" keyProperty="backUserId" keyColumn="backUserId">
    <!--
    @mbg.generated
    -->
    insert into back_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="backUserId != null">
        back_user_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="backUserId != null">
        #{backUserId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmrd.entity.user.BackUserExample" resultType="java.lang.Long">
    <!--
    @mbg.generated
    -->
    select count(*) from back_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbg.generated
    -->
    update back_user
    <set>
      <if test="record.backUserId != null">
        back_user_id = #{record.backUserId,jdbcType=BIGINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbg.generated
    -->
    update back_user
    set back_user_id = #{record.backUserId,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      version = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmrd.entity.user.BackUser">
    <!--
    @mbg.generated
    -->
    update back_user
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where back_user_id = #{backUserId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmrd.entity.user.BackUser">
    <!--
    @mbg.generated
    -->
    update back_user
    set email = #{email,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=INTEGER},
      version = #{version,jdbcType=BIGINT}
    where back_user_id = #{backUserId,jdbcType=BIGINT}
  </update>

  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from back_user
    where (user_name=#{userName} or mobile=#{userName})
  </select>
</mapper>